services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - ${SPRING_PORTS}
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - ./backend/logs:/app/logs 

  frontend:
    build: ./frontend
    ports:
      - ${FRONTEND_PORT}


  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5433"

  prometheus:
    image: prom/prometheus
    ports:
      - ${PROMETHEUS_PORTS}
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  node-exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"

  grafana:
    image: grafana/grafana
    ports:
      - ${GRAFANA_PORTS}
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus

  loki:
    image: grafana/loki:2.9.4
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.9.4
    volumes:
      - ./backend/logs:/app/backend/logs  
      - ./promtail-config.yml:/etc/promtail/promtail.yml
    command: -config.file=/etc/promtail/promtail.yml
    depends_on:
      - loki


volumes:
  grafana-storage: